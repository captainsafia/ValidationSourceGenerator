//HintName: ValidationGenerated.g.cs
// <auto-generated/>
#nullable enable
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
public static partial class ValidationLookups
{
public static readonly System.Collections.Generic.Dictionary<SourceKey, Func<EndpointFilterInvocationContext, EndpointFilterDelegate, ValueTask<object?>>> Map = new()
{

[new SourceKey("b9743ed7-f90a-4872-ab24-5852cc6794fd.cs", 9)] = async (EndpointFilterInvocationContext context, EndpointFilterDelegate next) =>
{
    var todo = context.GetArgument<Todo>(0);
    var Id_RequiredAttribute = new System.ComponentModel.DataAnnotations.RequiredAttribute();
var Id_RangeAttribute = new System.ComponentModel.DataAnnotations.RangeAttribute(1, 2147483647);
var Title_RequiredAttribute = new System.ComponentModel.DataAnnotations.RequiredAttribute();
var Title_MinLengthAttribute = new System.ComponentModel.DataAnnotations.MinLengthAttribute(3);

    if (Id_RequiredAttribute.IsValid(todo.Id))
{return Results.Problem("Validation problem detected in Id_RequiredAttribute");}if (Id_RangeAttribute.IsValid(todo.Id))
{return Results.Problem("Validation problem detected in Id_RangeAttribute");}if (Title_RequiredAttribute.IsValid(todo.Title))
{return Results.Problem("Validation problem detected in Title_RequiredAttribute");}if (Title_MinLengthAttribute.IsValid(todo.Title))
{return Results.Problem("Validation problem detected in Title_MinLengthAttribute");}
    return await next(context);
},};
}
